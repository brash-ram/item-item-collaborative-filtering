version: '3.8'

networks:
    backend:

services:
    app:
        container_name: collaborative_filter_container
        image: brashram/filter_image
        depends_on:
            - rabbitmq
            - postgres
        build:
            context: .
        environment:
            DB_URL: "jdbc:postgresql://postgres:5432/filter"
            DB_USERNAME: "postgres"
            DB_PASSWORD: "qwerty"
            RABBIT_HOST: "rabbitmq"
            RABBIT_USERNAME: "user"
            RABBIT_PASSWORD: "qwerty"
            RABBIT_PORT: 5672
            FILTER_QUEUE: "filter-queue"
            FILTER_EXCHANGE: "filter-queue"
            TIME_UPDATE_FILTER: 30000
            TIME_UPDATE_SIMILARITY: 30000
        ports:
            - "8080:8080"
        networks:
            - backend

    postgres:
        container_name: postgres_container
        image: postgres
        environment:
            POSTGRES_DB: "filter"
            POSTGRES_USER: "postgres"
            POSTGRES_PASSWORD: "qwerty"
        ports:
            - "5432:5432"
        volumes:
            - ./volumes/postgres-data:/var/lib/postgresql/data
        restart: on-failure
        healthcheck:
            test: [ "CMD-SHELL", "pg_isready -U postgres" ]
            interval: 20s
            timeout: 5s
            retries: 5
            start_period: 10s
        networks:
            - backend


    rabbitmq:
        image: rabbitmq:3-management
        restart: always
        environment:
            - RABBITMQ_DEFAULT_USER=user
            - RABBITMQ_DEFAULT_PASS=qwerty
        volumes:
            - ./volumes/rabbitmq:/var/lib/rabbitmq
        ports:
            - "15672:15672"
            - "5672:5672"
        networks:
            - backend